@model Eshop.DomainClass.Setting.SiteSetting

@{
    ViewBag.Title = "تنظیمات سایت";
}


<!-- /Page Header -->
<!-- Page Breadcrumb -->
<div class="page-breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="#">خانه</a>
        </li>
        <li class="active">تنظیمات </li>
        <li class="active">تنظیمات سایت</li>
    </ul>
</div>
<!-- /Page Breadcrumb -->
<!-- Page Header -->
<div class="page-header position-relative">
    <div class="header-title">
        <h1>
            ویرایش
        </h1>
    </div>
    <!--Header Buttons-->
    <div class="header-buttons">
        <a class="sidebar-toggler" href="#">
            <i class="fa fa-arrows-h"></i>
        </a>
        <a class="refresh" id="refresh-toggler" href="">
            <i class="glyphicon glyphicon-refresh"></i>
        </a>
        <a class="fullscreen" id="fullscreen-toggler" href="#">
            <i class="glyphicon glyphicon-fullscreen"></i>
        </a>
    </div>
    <!--Header Buttons End-->
</div>
<!-- /Page Header -->
<!-- Page Body -->
<div class="page-body">

    @if (ViewBag.Success == "yes")
    {
        <div class="alert alert-success fade in">
            <button class="close" data-dismiss="alert">
                ×
            </button>
            <i class="glyphicon glyphicon-ok"></i>
            <span style="font-size: 17px">
                اطلاعات با موفقیت ثبت شد.
            </span>
        </div>
    }

    @if (ViewBag.Success == "no")
    {
        <div class="alert alert-danger fade in">
            <button class="close" data-dismiss="alert">
                ×
            </button>
            <i class="glyphicon glyphicon-remove"></i>
            <span style="font-size: 17px">
                در ثبت اطلاعات خطایی رخ داد!!!
            </span>
        </div>
    }

    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm("EditSiteSetting", "ManageSite", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.SettingID)
                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-xs-12">
                        <div class="widget flat radius-bordered">
                            <div class="widget-header bg-green">
                                <span class="widget-caption">فرم ویرایش تنظیمات سایت</span>
                            </div>
                            <div class="widget-body">
                                <div id="registration-form col-md-12">
                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            درباره ما
                                        </label>
                                        <span class="input-icon icon-right ">
                                            @Html.EditorFor(model => model.SiteDescription, new { htmlAttributes = new { @class = "form-control animated", PlaceHolder = Html.DisplayNameFor(m => m.SiteDescription) } })
                                            @Html.ValidationMessageFor(model => model.SiteDescription, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.SiteEmail, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteEmail, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SiteEmail, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.SiteTell, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteTell, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.SiteTell) } })
                                            @Html.ValidationMessageFor(model => model.SiteTell, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.SiteMobile, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteMobile, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.SiteMobile) } })
                                            @Html.ValidationMessageFor(model => model.SiteMobile, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control animated", PlaceHolder = Html.DisplayNameFor(m => m.Address) } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            @Html.LabelFor(model => model.SiteFax, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteFax, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.SiteFax) } })
                                            @Html.ValidationMessageFor(model => model.SiteFax, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            @Html.LabelFor(model => model.SupportTell, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SupportTell, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.SupportTell) } })
                                            @Html.ValidationMessageFor(model => model.SupportTell, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            @Html.LabelFor(model => model.SupportEmail, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SupportEmail, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.SupportEmail) } })
                                            @Html.ValidationMessageFor(model => model.SupportEmail, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            @Html.LabelFor(model => model.PublicProductCount, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.PublicProductCount, new { htmlAttributes = new { @class = "form-control", PlaceHolder = Html.DisplayNameFor(m => m.PublicProductCount) } })
                                            @Html.ValidationMessageFor(model => model.PublicProductCount, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>

                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.CopyRight, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.CopyRight, new { htmlAttributes = new { @class = "form-control animated", PlaceHolder = Html.DisplayNameFor(m => m.CopyRight) } })
                                            @Html.ValidationMessageFor(model => model.CopyRight, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>

                                    <div class="form-group col-md-12">
                                        <label>
                                            @Html.LabelFor(model => model.SiteRules, new { htmlAttributes = new { @class = "form-control" } })
                                        </label>
                                        <span class="input-icon icon-right">
                                            @Html.EditorFor(model => model.SiteRules, new { htmlAttributes = new { @class = "form-control animated", PlaceHolder = Html.DisplayNameFor(m => m.SiteRules) } })
                                            @Html.ValidationMessageFor(model => model.SiteRules, "", new { @class = "text-danger" })
                                            <i class="fa fa-user circular"></i>
                                        </span>
                                    </div>

                                    <div class="form-group col-md-12">
                                        <button type="submit" class="btn btn-success col-md-3">ویرایش</button>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
</div>


@section Scripts
{
    <script src="~/Areas/Admin/Content/CustomJs/ResizeTextArea.js"></script>
    <script src="https://cdn.ckeditor.com/4.9.2/standard/ckeditor.js"></script>
    <script src="~/Scripts/jquery.js"></script>
    <script>
        $(function () {
            CKEDITOR.replace('SiteDescription', {
                customConfig: '/Content/js/config.js'
            });
        });

        $(function () {
            CKEDITOR.replace('CopyRight', {
                customConfig: '/Content/js/config.js'
            });
        });

        $(function () {
            CKEDITOR.replace('SiteRules', {
                customConfig: '/Content/js/config.js'
            });
        });
    </script>
}

