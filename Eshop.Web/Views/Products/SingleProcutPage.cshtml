@using Eshop.Business.StaticTools
@using Eshop.DomainClass.Product
@using Eshop.Utilitiy.Convertor
@model Eshop.ViewModel.Products.ProductDetailViewModel
@{
    ViewBag.Title = Model.Product.Title;
    ProductComment replyComment = new ProductComment() { ProductId = Model.Product.ProductId };
    int scrollcount = 1;
    int skip = 0;
}

<section>
    <div class="container">
        <div class="row">
            <div class="col-sm-9 padding-right">
                <div class="product-details">
                    <!--product-details-->
                    <div class="col-sm-5">
                        <div class="view-product">
                            <img src="@PathTools.ProductImagePath@Model.Product.SingleProductImageName" alt="">
                            <a class="example-image-link" href="@PathTools.ProductImagePath@Model.Product.SingleProductImageName" data-lightbox="example-2">
                                <h3>بزرگنمایـی</h3>
                            </a>
                        </div>
                        <div id="similar-product" class="carousel slide" data-ride="carousel">

                            <!-- Wrapper for slides -->
                            <div class="carousel-inner">

                                @if (Model.Product.ProductGalleries.Count() % 3 == 0)
                                {
                                    for (int i = 1; i <= Model.ProductGalleries.Count() / 3; i++)
                                    {
                                        int count = i;
                                        <div class="item @((count == 1) ? "active" : "")">
                                            @foreach (var item in Model.ProductGalleries.Skip((i - 1) * 3).Take(3))
                                            {
                                                <a class="example-image-link" href="@PathTools.ProductImageGalleryOriginPath@item.ImageName" data-lightbox="example-2">
                                                    <img class="example-image" src="@PathTools.ProductImageGalleryThumbPath@item.ImageName" style="width: 85px; height: 85px" />
                                                </a>
                                            }
                                        </div>
                                    }
                                }
                                else if (Model.ProductGalleries.Count() % 3 > 0)
                                {
                                    for (int i = 1; i <= (Model.ProductGalleries.Count() / 3) + 1; i++)
                                    {
                                        int count = i;
                                        <div class="item @((count == 1) ? "active" : "")">
                                            @foreach (var item in Model.ProductGalleries.Skip((i - 1) * 3).Take(3))
                                            {
                                                <a class="example-image-link" href="@PathTools.ProductImageGalleryOriginPath@item.ImageName" data-lightbox="example-2">
                                                    <img class="example-image" src="@PathTools.ProductImageGalleryThumbPath@item.ImageName" style="width: 85px; height: 85px" />
                                                </a>
                                            }
                                        </div>
                                    }
                                }

                            </div>
                            <!-- Controls -->
                            <a class="right item-control" href="#similar-product" data-slide="next">
                                <i class="fa fa-angle-right"></i>
                            </a>
                            <a class="left item-control" href="#similar-product" data-slide="prev">
                                <i class="fa fa-angle-left"></i>
                            </a>
                        </div>
                    </div>
                    @using (Ajax.BeginForm("CreateNewOrderForSingle", "Products", new AjaxOptions
                    {
                        HttpMethod = "POST",
                        OnSuccess = "OrderSuccess",
                        OnFailure = "OrderFailur"
                    }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                        <div class="col-sm-7">
                            <div class="product-information">
                                <!--/product-information-->
                                <img src="" class="newarrival" alt="">
                                <div>
                                    <h2>@Model.Product.Title</h2>
                                    <p>شناسـه : @Model.Product.ProductCode</p>
                                </div>
                                <div>
                                    @if (Model.Product.ProductSelectedFeatures.Any())
                                    {
                                        foreach (var item in Model.Product.ProductSelectedFeatures.GroupBy(s => s.FeatureId).Select(s => s.First()))
                                        {
                                            <ul>
                                                <li>
                                                    <label>@item.ProductFeatures.FeatureTitle :</label>
                                                </li>
                                                <li>
                                                    <select name="selectedFeatures">
                                                        @foreach (var selected in Model.Product.ProductSelectedFeatures.Where(s => s.FeatureId == item.FeatureId && !s.IsDelete))
                                                        {
                                                            <option value="@selected.PF_Id">@selected.Value</option>
                                                        }
                                                    </select>
                                                </li>
                                            </ul>
                                        }
                                    }
                                </div>
                                <div>
                                    <span>
                                        <span>
                                            قیمت :
                                            @if (Model.Product.IsExist)
                                            {
                                                @Model.Product.SinglePrice.ToString("#,0 تومان")
                                            }
                                            else
                                            {
                                                <span class="has-error">ناموجود</span>
                                            }
                                        </span>
                                    </span>
                                    <span>
                                        <label>تعداد :</label>
                                        <input name="count" value="1" class="search_box" type="number" data-val="true" data-val-number="لطفا تعداد را به عدد وارد کنید" data-val-regex="تعداد معتبر نمی باشد" data-val-regex-pattern="(^[1-9]+$)" data-val-required="لطفا تعداد را وارد کنید" data-val-range="حداقل مبلغ 5000 تومان می باشد" data-val-range-max="999999999" data-val-range-min="5000" required>
                                        <button type="submit" class="btn btn-fefault cart">
                                            <i class="fa fa-shopping-cart"></i>
                                            افـزودن به سبـد خریـد
                                        </button>
                                    </span>
                                    <span class="clearfix"></span>
                                </div>
                                <span class="clearfix"></span>
                                <div>
                                    <p><b>موجـودی :</b> @((Model.Product.IsExist) ? "در انبـار موجود می باشد" : "موجود نیست")</p>
                                </div>
                                <div>
                                    <div class="padding-10">
                                        @Html.Raw(Model.Product.ShortDescription)
                                    </div>
                                </div>
                            </div><!--/product-information-->
                        </div>
                    }
                </div><!--/product-details-->
                <div class="category-tab shop-details-tab">
                    <!--category-tab-->
                    <div class="col-sm-12">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#details" data-toggle="tab">توضیحات</a></li>
                            <li class=""><a href="#companyprofile" data-toggle="tab">ویژگی ها</a></li>
                            <li class=""><a href="#tag" data-toggle="tab">برچسب</a></li>
                            <li class=""><a href="#reviews" data-toggle="tab">نظرات (@Model.ProductComment.Count)</a></li>
                        </ul>
                    </div>
                    <div class="tab-content">
                        <div class="tab-pane fade active in" id="details">
                            @Html.Raw(Model.Product.Text)
                        </div>
                        <div class="tab-pane fade" id="companyprofile">
                            <table class="table table-bordered col-md-12">
                                <tr>
                                    <th style="text-align: right">ویژگی</th>
                                    <th style="text-align: right">مقدار</th>
                                </tr>
                                @if (Model.Product.ProductSelectedFeatures.Any())
                                {
                                    foreach (var item in Model.Product.ProductSelectedFeatures.GroupBy(s => s.FeatureId).Select(s => s.First()))
                                    {
                                        var fet = Model.Product.ProductSelectedFeatures.Where(f => f.ProductId == item.ProductId && f.FeatureId == item.FeatureId).Select(s => s.Value).ToList();
                                        <tr>
                                            <td>@item.ProductFeatures.FeatureTitle</td>
                                            <td>@string.Join(" - ", fet)</td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                        <div class="tab-pane fade" id="tag">
                            @foreach (var tag in Model.Product.ProductTags)
                            {
                                <a class="btn btn-default">
                                    @tag.TagTitle
                                </a>
                            }
                        </div>
                        <div class="tab-pane fade" id="reviews">
                            <div class="col-sm-12">

                                @if (User.Identity.IsAuthenticated)
                                {

                                    using (Html.BeginForm("CreateCommnet", "Products", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        <input name="urlReferrer" type="text" value="@Request.Url.AbsolutePath" hidden>
                                        <input name="replyComment.ProductId" type="number" value="@Model.Product.ProductId" hidden id="ProductId">
                                        <input name="replyComment.ParentId" type="number" value="" hidden>
                                        <div class="col-sm-12 text-area">
                                            <div class="form-group col-md-12">
                                                @Html.EditorFor(model => replyComment.Comment, new { htmlAttributes = new { @class = "form-control Comment-Text animated", @id = "reply-comment-text", PlaceHolder = "متن نظر شما", name = "replyComment.Comment" } })
                                                @Html.ValidationMessageFor(model => replyComment.Comment, "", new { @class = "text-danger" })
                                            </div>
                                            <button class="btn btn-primary" type="submit">ارسـال نظـر</button>
                                        </div>
                                    }
                                    <div class="clearfix"></div>
                                    <br />
                                    <div class="response-area">
                                        <h2>نظرات</h2>
                                        <ul class="media-list">
                                            @foreach (var mainComment in Model.ProductComment.Where(c => c.ParentId == null))
                                            {
                                                <li class="media col-md-12">
                                                    <a class="pull-right" href="#">
                                                        <img class="media-object user-avatar-image" src="@PathTools.UserAvatar" alt="User">
                                                    </a>
                                                    <div class="media-body">
                                                        <ul class="sinlge-post-meta">
                                                            <li><i class="fa fa-user"></i>@mainComment.User.UserName</li>
                                                            <li><i class="fa fa-clock-o"></i> @mainComment.CreateDate.ToString("HH:mm")</li>
                                                            <li><i class="fa fa-calendar"></i>@mainComment.CreateDate.ToStringShamsiDate()</li>
                                                        </ul>
                                                        @Html.Raw(mainComment.Comment)
                                                        <a class="btn btn-primary" data-toggle="modal" data-target="#exampleModalLong" onclick="FillCommentParentId('@mainComment.CommentId')"><i class="fa fa-reply"></i>پاسـخ</a>
                                                    </div>
                                                </li>
                                                foreach (var subComment in Model.ProductComment.Where(s => s.ParentId == mainComment.CommentId))
                                                {
                                                    <li class="media second-media">
                                                        <a class="pull-right">
                                                            <img class="media-object user-avatar-image" src="@PathTools.UserAvatar" alt="User">
                                                        </a>
                                                        <div class="media-body">
                                                            <ul class="sinlge-post-meta">
                                                                <li><i class="fa fa-user"></i>@subComment.User.UserName</li>
                                                                <li><i class="fa fa-clock-o"></i> @subComment.CreateDate.ToString("HH:mm")</li>
                                                                <li><i class="fa fa-calendar"></i>@subComment.CreateDate.ToStringShamsiDate()</li>
                                                            </ul>
                                                            @Html.Raw(subComment.Comment)
                                                        </div>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-warning">
                                        <p>
                                            برای مشاهده و ثبت نظر ابتدا باید <a href="/Login">وارد</a> سایت شوید
                                        </p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="recommended_items">
                    <!--recommended_items-->
                    <h2 class="title text-center">محصولات پیشنهادی</h2>
                    <div id="recommended-item-carousel" class="carousel slide" data-ride="carousel">
                        <div class="carousel-inner">

                            @if (Model.SuggestedProducts.Count % 3 == 0)
                            {
                                for (int i = 1; i <= Model.SuggestedProducts.Count() / 3; i++)
                                {
                                    int count = i;
                                    <div class="item @((count == 1) ? "active" : "")">
                                        @foreach (var item in Model.SuggestedProducts.Skip((i - 1) * 3).Take(3))
                                        {
                                            @Html.Partial("SearchProductBox", item)
                                        }
                                    </div>
                                }
                            }
                            else if (Model.SuggestedProducts.Count % 3 > 0)
                            {
                                for (int i = 1; i <= (Model.SuggestedProducts.Count() / 3) + 1; i++)
                                {
                                    int count = i;
                                    <div class="item @((count == 1) ? "active" : "")">
                                        @foreach (var item in Model.SuggestedProducts.Skip((i - 1) * 3).Take(3))
                                        {
                                            @Html.Partial("SearchProductBox", item)
                                        }
                                    </div>
                                }
                            }
                        </div>
                        <a class="left recommended-item-control" href="#recommended-item-carousel" data-slide="prev">
                            <i class="fa fa-angle-left"></i>
                        </a>
                        <a class="right recommended-item-control" href="#recommended-item-carousel" data-slide="next">
                            <i class="fa fa-angle-right"></i>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="left-sidebar">
                    <h2>دسته بندی محصولات</h2>
                    <div class="panel-group category-products" id="accordian">
                        <!--category-productsr-->
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a href="/CrumbsProducts" class="collapsed">
                                        <span class="badge pull-right"><i class="fa fa-plus"></i></span>
                                        همه
                                    </a>
                                </h4>
                            </div>
                            @foreach (var mainGroup in Model.ProductGroups.Where(s => s.ParentId == null))
                            {

                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordian" href="#Group_@mainGroup.GroupId" class="collapsed">
                                            <span class="badge pull-right"><i class="fa fa-plus"></i></span>
                                            @mainGroup.GroupTitle
                                        </a>
                                    </h4>
                                </div>
                                <div id="Group_@mainGroup.GroupId" class="panel-collapse collapse" style="height: 0px;">
                                    <div class="panel-body">
                                        <ul>
                                            @foreach (var subGroup in Model.ProductGroups.Where(s => s.ParentId == mainGroup.GroupId))
                                            {
                                                <li><a href="@Url.RouteUrl("CrumbsProducts",new {GroupId=subGroup.GroupId})" class="cursur-pointer">@subGroup.GroupTitle </a></li>
                                            }

                                        </ul>
                                    </div>
                                </div>
                                skip++;
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("CreateCommnet", "Products", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="margin-top: 15%">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">ارسال پاسخ شما</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input name="replyComment.ProductId" type="number" value="@Model.Product.ProductId" hidden id="ProductId">
                    <input name="replyComment.ParentId" type="number" value="" id="reply-comment-id" hidden>
                    <input name="urlReferrer" type="text" value="@Request.Url.AbsolutePath" hidden>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group col-md-12">
                                @Html.EditorFor(model => replyComment.Comment, new { htmlAttributes = new { @class = "form-control comment-textarea animated", @id = "reply-comment-text", PlaceHolder = "متن نظر شما" } })
                                @Html.ValidationMessageFor(model => replyComment.Comment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-block btn-success"> ارسال نظر ارزشمند شما </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section CustomScripts
{
    <script src="~/Content/lightbox/dist/js/lightbox.min.js"></script>
    <script src="~/Content/CustomJs/Product.js"></script>
}

